.base:
  image: docker:20.10.11
  services:
    - docker:20.10.11-dind
  tags:
    - docker

stages:
  - prepare
  - test
  - build
  - release

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

# the assumption is that there is an MLflow server accessible by the 'mlflow-access' runner
# job artifact therefore contains model binary
download model from mlflow:
  stage: prepare
  tags:
    - mlflow-access
  script:
    - apk add --no-cache jq curl aws-cli
    - sh mlflow/download_model.sh
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - $CI_PROJECT_DIR/model

# execute tests and export coverage to gitlab
pytest:
  stage: test
  image: python:3.12
  before_script:
    - pip install -r requirements.txt
  script:
    - python -m pytest --junitxml=report.xml --cov-report xml:coverage.xml --cov-report term --cov app tests
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml
    expire_in: 2 weeks

# builds model container with model binary embedded into it (see Dockerfile)
build:
  extends:
    - .base
  stage: build
  needs:
    - download model
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

# builds release model container with model binary embedded into it (see Dockerfile)
release:
  extends:
    - .base
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main